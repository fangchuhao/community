<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.MessageMapper">
    <sql id="insertFields">
        from_id,to_id,conversation_id,content,status,create_time
    </sql>
    <sql id="selectFields">
        id,from_id,to_id,conversation_id,content,status,create_time
    </sql>
    
    <select id="selectConversationsByFromId" resultType="Message">
      SELECT <include refid="selectFields"></include>
      FROM message
      WHERE id IN
          (
              SELECT MAX(id) FROM message
                WHERE STATUS!=2
                AND from_id!=1
                AND (from_id=#{userId} OR to_id=#{userId})
                GROUP BY conversation_id
            )
      ORDER BY id DESC
      limit #{offset},#{limit}
    </select>
    <select id="countConversationsByFromId" resultType="int">
        SELECT COUNT(m.max_id) FROM
        (
            SELECT MAX(id) max_id FROM message
                WHERE STATUS!=2
                AND from_id!=1
                AND (from_id=#{userId} OR to_id=#{userId})
                GROUP BY conversation_id
        ) m
    </select>
    <select id="selectByConversationId" resultType="Message">
        SELECT <include refid="selectFields"></include>
        FROM message
        WHERE conversation_id=#{conversationId}
        AND STATUS!=2
        ORDER BY id DESC
        limit #{offset},#{limit}
    </select>
    <select id="countByConversationId" resultType="int">
        SELECT count(id)
        FROM message
        WHERE conversation_id=#{conversationId}
        AND STATUS!=2
    </select>
    <select id="countUnReadMessage" resultType="int">
      select count(id)
      from message
      where status=0
      and from_id!=1
      and (from_id=#{userId} OR to_id=#{userId})
      <if test="conversationId!=null">
          and conversation_id=#{conversationId}
      </if>
    </select>
    <update id="updateMessageStatus">
        update message set status = #{status}
        where id=#{id}
    </update>

    <update id="updateMessageStatusByIds">
        update message set status = #{status}
        where id IN 
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <insert id="insertMessage" parameterType="Message">
        insert into message (<include refid="insertFields"></include>)
        VALUES
        (#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>
    
    <select id="selectLastestByKafkaType" resultType="Message">
        SELECT <include refid="selectFields"></include>
        FROM message
        WHERE from_id=1 AND to_id=#{userId} AND conversation_id=#{topic} AND status!=2
        ORDER BY id DESC
        LIMIT 0,1;
    </select>

    <select id="countByKafkaType" resultType="int">
        SELECT count(1)
        FROM message
        WHERE from_id=1
        AND to_id=#{userId}
        AND conversation_id=#{topic}
        AND status!=2
    </select>

    <select id="countUnReadedByKafkaType" resultType="int">
        SELECT count(1)
        FROM message
        WHERE from_id=1 AND to_id=#{userId}  AND status=0
        <if test="topic!=null">
            AND conversation_id=#{topic}
        </if>
    </select>

    <select id="selectListByKafkaType" resultType="Message">
        SELECT <include refid="selectFields"></include>
        FROM message
        WHERE from_id=1 AND to_id=#{userId} AND conversation_id=#{topic} AND status!=2
        ORDER BY id DESC
        LIMIT #{offset},#{limit};
    </select>
</mapper>